<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework.samples.petclinic.discovery</groupId>
    <artifactId>spring-petclinic-discovery-server</artifactId>
    <packaging>jar</packaging>
    <description>Spring PetClinic Discovery Server</description>

    <parent>
        <groupId>org.springframework.samples</groupId>
        <artifactId>spring-petclinic-microservices</artifactId>
        <version>3.2.23</version>
    </parent>

    <properties>
        <docker.image.exposed.port>8761</docker.image.exposed.port>
        <docker.image.dockerfile.dir>${basedir}/../docker</docker.image.dockerfile.dir>
        <dockerhub.username>davidunir945</dockerhub.username>
        <dockerhub.repository>spring-petclinic-discovery-server-test</dockerhub.repository>
        <dockerhub.password>dckr_pat_h4JdCXIoLpzBAPZcw_nAL-ne0Qc</dockerhub.password>
    </properties>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Cloud -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <!-- JAXB is required since Java 9 -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>buildDocker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${container.executable}</executable>
                                    <workingDirectory>${docker.image.dockerfile.dir}</workingDirectory>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>-f</argument>
                                        <argument>Dockerfile</argument>
                                        <argument>--build-arg</argument>
                                        <argument>ARTIFACT_NAME=${project.build.finalName}</argument>
                                        <argument>--build-arg</argument>
                                        <argument>EXPOSED_PORT=${docker.image.exposed.port}</argument>
                                        <argument>--platform</argument>
                                        <argument>${container.platform}</argument>
                                        <argument>${container.build.extraarg}</argument>
                                        <argument>-t</argument>
                                        <argument>${dockerhub.username}/${dockerhub.repository}:${project.version}</argument> <!-- Etiqueta correcta -->
                                        <argument>${project.build.directory}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-build-latest</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${container.executable}</executable>
                                    <workingDirectory>${docker.image.dockerfile.dir}</workingDirectory>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>-f</argument>
                                        <argument>Dockerfile</argument>
                                        <argument>--build-arg</argument>
                                        <argument>ARTIFACT_NAME=${project.build.finalName}</argument>
                                        <argument>--build-arg</argument>
                                        <argument>EXPOSED_PORT=${docker.image.exposed.port}</argument>
                                        <argument>--platform</argument>
                                        <argument>${container.platform}</argument>
                                        <argument>${container.build.extraarg}</argument>
                                        <argument>-t</argument>
                                        <argument>${dockerhub.username}/${dockerhub.repository}:latest</argument> <!-- Nueva etiqueta -->
                                        <argument>${project.build.directory}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-login</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${container.executable}</executable>
                                    <arguments>
                                        <argument>login</argument>
                                        <argument>-u</argument>
                                        <argument>${dockerhub.username}</argument>
                                        <argument>-p</argument>
                                        <argument>${dockerhub.password}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-push</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${container.executable}</executable>
                                    <arguments>
                                        <argument>push</argument>
                                        <argument>${dockerhub.username}/${dockerhub.repository}:${project.version}</argument> <!-- Etiqueta correcta -->
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-push-latest</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${container.executable}</executable>
                                    <arguments>
                                        <argument>push</argument>
                                        <argument>${dockerhub.username}/${dockerhub.repository}:latest</argument> <!-- Etiqueta correcta -->
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
<!--    <build>-->
<!--        <plugins>-->
<!--            &lt;!&ndash; Plugin para copiar los archivos primero &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-antrun-plugin</artifactId>-->
<!--                <version>3.1.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy-yaml-files</id>-->
<!--                        <phase>generate-resources</phase>-->
<!--                        <goals>-->
<!--                            <goal>run</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <target>-->
<!--                                <copy todir="../k8s">-->
<!--                                    <fileset dir="../templates" includes="discovery-server-deployment.yaml"/>-->
<!--                                </copy>-->
<!--                            </target>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->

<!--            &lt;!&ndash; Plugin para realizar el reemplazo despuÃ©s de copiar &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>com.google.code.maven-replacer-plugin</groupId>-->
<!--                <artifactId>replacer</artifactId>-->
<!--                <version>1.5.3</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>replace-yaml-tokens</id>-->
<!--                        <phase>prepare-package</phase>-->
<!--                        <goals>-->
<!--                            <goal>replace</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <ignoreMissingFile>false</ignoreMissingFile>-->
<!--                    <file>../k8s/discovery-server-deployment.yaml</file>-->
<!--                    <replacements>-->
<!--                        <replacement>-->
<!--                            <token>%IMAGE_VERSION%</token>-->
<!--                            <value>${version}</value>-->
<!--                        </replacement>-->
<!--                    </replacements>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->
</project>
